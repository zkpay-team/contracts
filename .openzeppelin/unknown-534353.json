{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x05D8A2E01EB06c284ECBae607A2d0c2BE946Bf49",
      "txHash": "0x5880782ad6cb20c1e08a43bbffa120497966b1ed32747def73c1ca7845211d4d",
      "kind": "uups"
    },
    {
      "address": "0x89b0d7A8B7B3c23d03c471F7c28197655c3A192B",
      "txHash": "0xe9531f1145e064ced6e77750d7f85ca6ac2274e719b77ef3a8f966744878841a",
      "kind": "uups"
    }
  ],
  "impls": {
    "76b7c7947f905f9cbb489342ea57a1b3ebc873142cc44ed45b50b870550a94b6": {
      "address": "0xfc4ad5EBb91d6d620fE32452D71909DE8f244cBd",
      "txHash": "0x3dde6368b3dc51bb8efdd5af03f5cadeacc6a538ff7b4d0381ccbb751e88ebd5",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_trustedForwarders",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC2771RecipientUpgradeable",
            "src": "contracts/libs/ERC2771RecipientUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "153",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "158",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "takenHandles",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "contract": "ZkpayID",
            "src": "contracts/ZkpayID.sol:58"
          },
          {
            "label": "profiles",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_uint256,t_struct(Profile)4274_storage)",
            "contract": "ZkpayID",
            "src": "contracts/ZkpayID.sol:63"
          },
          {
            "label": "ids",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ZkpayID",
            "src": "contracts/ZkpayID.sol:68"
          },
          {
            "label": "mintFee",
            "offset": 0,
            "slot": "305",
            "type": "t_uint256",
            "contract": "ZkpayID",
            "src": "contracts/ZkpayID.sol:73"
          },
          {
            "label": "nextProfileId",
            "offset": 0,
            "slot": "306",
            "type": "t_struct(Counter)2359_storage",
            "contract": "ZkpayID",
            "src": "contracts/ZkpayID.sol:78"
          },
          {
            "label": "delegates",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "contract": "ZkpayID",
            "src": "contracts/ZkpayID.sol:83"
          },
          {
            "label": "whitelistMerkleRoot",
            "offset": 0,
            "slot": "308",
            "type": "t_bytes32",
            "contract": "ZkpayID",
            "src": "contracts/ZkpayID.sol:88"
          },
          {
            "label": "mintStatus",
            "offset": 0,
            "slot": "309",
            "type": "t_enum(MintStatus)4267",
            "contract": "ZkpayID",
            "src": "contracts/ZkpayID.sol:93"
          },
          {
            "label": "shortHandlesMaxPrice",
            "offset": 0,
            "slot": "310",
            "type": "t_uint256",
            "contract": "ZkpayID",
            "src": "contracts/ZkpayID.sol:98"
          },
          {
            "label": "hasActivity",
            "offset": 0,
            "slot": "311",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "ZkpayID",
            "src": "contracts/ZkpayID.sol:103"
          },
          {
            "label": "isServiceContract",
            "offset": 0,
            "slot": "312",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ZkpayID",
            "src": "contracts/ZkpayID.sol:108"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(MintStatus)4267": {
            "label": "enum ZkpayID.MintStatus",
            "members": [
              "ON_PAUSE",
              "ONLY_WHITELIST",
              "PUBLIC"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Profile)4274_storage)": {
            "label": "mapping(uint256 => struct ZkpayID.Profile)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2359_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Profile)4274_storage": {
            "label": "struct ZkpayID.Profile",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "handle",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "dataUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
